# Starkey UCS Blade Kickstart File
# Nathan Souer v0.1

#version=DEVEL
install
url --url=http://10.40.32.25/install/i386/rhel4as/
lang en_US
keyboard us

#HOST CONFIGURATION
#INSTALL METHOD
text
#Network
#network --onboot yes --device eth0 --bootproto=static --noipv6 --ip=10.40.32.225 --netmask=255.255.255.0 --gateway=10.40.32.1 --hostname=ep1d-testvm2

#USER
rootpw  --iscrypted $6$rPf75uNxpVVCm7Bo$RsWRL73/gC.8TWNlkRXL/kqSkkd10O.2M.NnHDY0q2ZvPUJiEfNaNwtFQSwu5qkwg4D2CW7j.CS3IhJ0A3jHW0
authconfig --enableshadow --passalgo=sha512
#FIREWALL OPTIONS
#firewall --service=ssh
firewall --disable
#SELINUX OPTIONS
#selinux --enforcing
selinux --disabled
#TIME OPTIONS
timezone --utc America/Chicago
#KERNEL
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto "
#START X ON BOOT
xconfig --startxonboot

#Disable some services : Not viable on RHEL 4
#services --disabled=NetworkManager,cups --enabled=snmpd,ntpd

#DISK
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work
#clearpart --none
#zerombr clears out existing partitions with no prompt
zerombr
clearpart --all

part /boot --fstype=ext3 --size=500
part pv.01 --size=1 --grow

volgroup vg_root --pesize=4096 pv.01 
logvol / --vgname=vg_root --name=lv_root --size=8196
#######APP DISK#####
logvol swap --vgname=vg_root --fstype=swap --name=lv_swap --size=2048
logvol /var --vgname=vg_root --fstype=ext3 --name=lv_var --size=8192
logvol /var/crash --vgname=vg_root --fstype=ext3 --name=lv_var_crash --size=2048
logvol /var/log --vgname=vg_root --fstype=ext3 --name=lv_var_log --size=2048
logvol /var/audit/log --vgname=vg_root --fstype=ext3 --name=lv_var_audit_log --size=2048
logvol /tmp --vgname=vg_root --fstype=ext3 --name=lv_tmp --size=8192
logvol /home --vgname=vg_root --fstype=ext3 --name=lv_home --size=8192
logvol /opt --vgname=vg_root --fstype=ext3 --name=lv_opt --size=8192
#######DB DISKS#####
#logvol swap --vgname=vg_root --fstype=swap --name=lv_swap --size=8196
#logvol /var --vgname=vg_root --fstype=ext3 --name=lv_var --size=32768
#logvol /var/crash --vgname=vg_root --fstype=ext3 --name=lv_var_crash --size=2048
#logvol /var/log --vgname=vg_root --fstype=ext3 --name=lv_var_log --size=2048
#logvol /var/audit/log --vgname=vg_root --fstype=ext3 --name=lv_var_audit_log --size=2048
#logvol /tmp --vgname=vg_root --fstype=ext3 --name=lv_tmp --size=32768
#logvol /home --vgname=vg_root --fstype=ext3 --name=lv_home --size=32768
#logvol /opt --vgname=vg_root --fstype=ext3 --name=lv_opt --size=16384

#Reboot after installing everything
reboot

#PACKAGES
%packages
@base
#@client-mgmt-tools
#@console-internet
@core
#@debugging
@system-tools
#@hardware-monitoring
#@java-platform
#@large-systems
#@network-file-system-client
#@performance
#@perl-runtime
#@server-platform
#@server-policy
#@x11
@kde-desktop
pax
#python-dmidecode
oddjob
#sgpio
device-mapper
device-mapper-multipath
samba-client
#certmonger
net-snmp-libs
net-snmp-utils
pam_krb5
krb5-workstation
perl-DBD-MySQL
#device-mapper-multipath
#device-mapper-multipath-libs
vnc-server
telnet
ftp
lftp
screen
sendmail
sendmail-cf
redhat-lsb

#%pre
#   #!/bin/sh
#   exec < /dev/tty3 > /dev/tty3 2>&1
#   chvt 3
#   install="no"
#   while [ "$install" != "yes" ]; do
#      clear
#      echo
#      echo '********************************************************************************'
#      echo '* W A R N I N G *'
#      echo '* *‘
#      echo ‘*This process will install a completely new operating system and *‘
#      echo '* *'
#      echo '* Do you wish to continue? (Type the entire word "yes" to proceed.) *'
#      echo '* *'
#      echo '********************************************************************************'
#      echo
#      read -p "Proceed with install? " install done clear chvt 1 #
#%end

%post --log=/root/post_install.log
#!/bin/bash

# Create mount point for standard UNIX NFS share
mkdir -m 755 /opt/depots

# Remove 'rhgb quiet' from boot
sed -i 's/rhgb quiet//' /boot/grub/grub.conf

# Set firstboot to run
sed -i 's/RUN_FIRSTBOOT=NO/RUN_FIRSTBOOT=YES/' /etc/sysconfig/firstboot
wget -O /etc/rc.d/init.d/firstboot http://10.40.32.25/ks/ks-files/ks-firstboot

# Disable/enable services
#services --disabled=NetworkManager,cups --enabled=snmpd,ntpd
/sbin/chkconfig NetworkManager off
/sbin/chkconfig cups off
/sbin/chkconfig snmpd on
/sbin/chkconfig ntpd on

# Download the post_build python script from the build server, ep1p-apbuild01
wget -O /root/post_build.py http://10.40.32.25:/ks/ks-scripts/post_build.py
chmod +x /root/post_build.py

# Switch the terminal to allow for input
#curTTY=`tty`
#exec < $curTTY > $curTTY 2> $curTTY
exec < /dev/tty6 > /dev/tty6 2> /dev/tty6
chvt6

# Make the script executable and run it
/root/post_build.py

chvt 1
exec < /dev/tty1 > /dev/tty1 2> /dev/tty1
%end
